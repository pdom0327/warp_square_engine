
plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
    id 'application'
}

archivesBaseName = 'warp_square_engine'
version = '0.2.0'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit test framework.
    testImplementation 'junit:junit:4.13.2'

    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:32.1.1-jre'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}

// def rustBasePath = "../"

// tasks.create(name: "cargo-output-dir", description: "Get cargo metadata") {
//     new ByteArrayOutputStream().withStream { os ->
//         exec {
//             commandLine 'cargo', 'metadata', '--format-version', '1'
//             workingDir rustBasePath
//             standardOutput = os
//         }
//         def outputAsString = os.toString()
//         def json = new groovy.json.JsonSlurper().parseText(outputAsString)

//         logger.info("cargo target directory: ${json.target_directory}")
//         project.ext.cargo_target_directory = json.target_directory
//     }
// }

// tasks.create(name: "cargo-build", type: Exec, description: "Running Cargo build", dependsOn: "cargo-output-dir") {
//     workingDir rustBasePath
//     commandLine 'cargo', 'build', '--release'
// }

// tasks.create(name: "rust-deploy", type: Sync, dependsOn: "cargo-build") {
//     from "${project.ext.cargo_target_directory}/release"
//     include "*.dll", "*.dylib", "*.so"
//     into "src/main/resources"
// }

// tasks.withType(ProcessResources) {
//     compileTask -> compileTask.dependsOn "rust-deploy"
// }

// tasks.withType(JavaCompile) {
//     compileTask -> compileTask.dependsOn "rust-deploy"
// }
